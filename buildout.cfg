[buildout]
develop =
    .

parts =
# libraries and 3rd party
    closure-library
# files
    deps.js
    compiled.js
# commands
    shell
    serve
    test

unzip = true

[closure-library]
recipe = infrae.subversion
urls = http://closure-library.googlecode.com/svn/trunk@714 closure-library
ignore_verification = true

[deps.js]
recipe = pwt.jscompiler:dependency
output = src/pwt/jscompiler/media/deps.js
root_with_prefix =
    ${closure-library:location}/closure-library /closure
    src/pwt/jscompiler/media /media
    src/pwt/jscompiler/templates /soy
extension = soy

[compiled.js]
recipe = pwt.recipe.closurebuilder:compile
dependency = deps.js
jar = /home/michael/src/oss/closure/closure-compiler-read-only/build/compiler.jar
inputs = src/pwt/jscompiler/media/tests.js
output = src/pwt/jscompiler/media

[shell]
recipe = zc.recipe.egg
scripts = ipython=shell
eggs =
    pwt.jscompiler
    ipython

[settings.ini]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/settings.ini.in
output = ${buildout:directory}/etc/settings.ini

[serve]
recipe = zc.recipe.egg
scripts = paster=serve
arguments =
    args = ["serve", "${settings.ini:output}"] + sys.argv[1:]
eggs =
    pwt.jscompiler
    PasteScript

[test]
recipe = zc.recipe.egg
scripts = nosetests=test
arguments =
    argv = sys.argv[0:1]
    +
    ["--nocapture",
     "--nologcapture",
     "--exe",
     "--with-test-suites",
     "--test-suites-include=jinja2.testsuite.suite",
     "--test-suites-include=pwt.recipe.closurebuilder.tests.suite",
    ] + sys.argv[1:]
eggs =
    nose
    pwt.jscompiler [test]
